///
/// Sets the size for a button
///
/// @group Mixins
/// @param {String} $height - Height applied to the button
/// @param {String} $padding - Horizontal padding applied to the button
/// @param {String} $border-width - Border width applied to the button
/// @param {String} $border-radius - Border radius applied to the button using either a unit value or the string "rounded"
///
@mixin button-size($height, $padding: $buttons-padding, $border-width: $buttons-border-width, $border-radius: $buttons-radius) {

	@if $border-radius == 'rounded' {
		border-radius: calc(var(--button-height) / 2);
	} @else {
		@include responsive-property('--button-border-radius', $border-radius);
	}

	@include responsive-property('--button-border-width', $border-width);
	@include responsive-property('--button-height', $height);
	@include responsive-property('--button-padding', $padding, '0 %s');
	border-radius: var(--button-border-radius);
	border-width: var(--button-border-width);
	height: var(--button-height);
	line-height: calc(var(--button-height) - (var(--button-border-width) * 2));
	padding: var(--button-padding);

}
