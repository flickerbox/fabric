{"version":3,"sources":["modernizr.js"],"names":["window","Modernizr","document","undefined","setCss","str","mStyle","cssText","is","obj","type","contains","substr","indexOf","testProps","props","prefixed","i","prop","testDOMProps","elem","item","bind","testPropsAll","ucProp","charAt","toUpperCase","slice","cssomPrefixes","join","split","inputElem","featureName","hasOwnProp","version","enableClasses","docElement","documentElement","mod","modElem","createElement","style","omPrefixes","toString","domPrefixes","toLowerCase","tests","classes","_hasOwnProperty","hasOwnProperty","call","object","property","constructor","prototype","Function","that","target","this","TypeError","args","arguments","bound","F","self","result","apply","concat","Object","feature","push","addTest","test","key","className","_version","_domPrefixes","_cssomPrefixes","testProp","testAllProps","replace"],"mappings":"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","file":"header.js","sourcesContent":["/* Modernizr 2.8.3 (Custom Build) | MIT & BSD\n * Build: http://modernizr.com/download/#-flexbox-cssclasses-testprop-testallprops-domprefixes\n */\n;\n\n\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.8.3',\n\n    Modernizr = {},\n\n    enableClasses = true,\n\n    docElement = document.documentElement,\n\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n\n    inputElem  ,\n\n\n    toString = {}.toString,    omPrefixes = 'Webkit Moz O ms',\n\n    cssomPrefixes = omPrefixes.split(' '),\n\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n\n    classes = [],\n\n    slice = classes.slice,\n\n    featureName,\n\n\n\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { \n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function bind(that) {\n\n        var target = this;\n\n        if (typeof target != \"function\") {\n            throw new TypeError();\n        }\n\n        var args = slice.call(arguments, 1),\n            bound = function () {\n\n            if (this instanceof bound) {\n\n              var F = function(){};\n              F.prototype = target.prototype;\n              var self = new F();\n\n              var result = target.apply(\n                  self,\n                  args.concat(slice.call(arguments))\n              );\n              if (Object(result) === result) {\n                  return result;\n              }\n              return self;\n\n            } else {\n\n              return target.apply(\n                  that,\n                  args.concat(slice.call(arguments))\n              );\n\n            }\n\n        };\n\n        return bound;\n      };\n    }\n\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                            if (elem === false) return props[i];\n\n                            if (is(item, 'function')){\n                                return item.bind(elem || obj);\n                }\n\n                            return item;\n            }\n        }\n        return false;\n    }\n\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n            if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n          return testProps(props, prefixed);\n\n            } else {\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n          return testDOMProps(props, prefixed, elem);\n        }\n    }    tests['flexbox'] = function() {\n      return testPropsAll('flexWrap');\n    };\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n                                    featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n\n\n     Modernizr.addTest = function ( feature, test ) {\n       if ( typeof feature == 'object' ) {\n         for ( var key in feature ) {\n           if ( hasOwnProp( feature, key ) ) {\n             Modernizr.addTest( key, feature[ key ] );\n           }\n         }\n       } else {\n\n         feature = feature.toLowerCase();\n\n         if ( Modernizr[feature] !== undefined ) {\n                                              return Modernizr;\n         }\n\n         test = typeof test == 'function' ? test() : test;\n\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\n         }\n         Modernizr[feature] = test;\n\n       }\n\n       return Modernizr; \n     };\n\n\n    setCss('');\n    modElem = inputElem = null;\n\n\n    Modernizr._version      = version;\n\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n\n\n\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n\n    Modernizr.testAllProps  = testPropsAll;\n\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n                                                    (enableClasses ? ' js ' + classes.join(' ') : '');\n\n    return Modernizr;\n\n})(this, this.document);\n;"],"sourceRoot":"/source/"}